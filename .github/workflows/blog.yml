# .github/workflows/blog.yml

name: Build and Deploy Blog

on:
  issues:
    types: [opened, edited, closed]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # ★★★ ここを追加 ★★★
      - name: Install dependencies
        run: npm install showdown

      - name: Build Blog from Issues
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs').promises;
            const path = require('path');
            const showdown = require('showdown'); // これが使えるようになります！
            const converter = new showdown.Converter();

            // ラベルに関係なく、オープンなIssueをすべて取得します
            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
            });

            const dir = 'public';
            await fs.mkdir(dir, { recursive: true });

            let indexHtml = `
              <!DOCTYPE html>
              <html lang="ja">
              <head>
                <meta charset="UTF-8">
                <meta name="viewport" content="width=device-width, initial-scale=1.0">
                <title>My Blog</title>
                <style>
                  body { font-family: sans-serif; line-height: 1.6; max-width: 800px; margin: 2rem auto; padding: 0 1rem; }
                  h1 { text-align: center; }
                  ul { list-style: none; padding: 0; }
                  li { margin-bottom: 1.5rem; border-bottom: 1px solid #eee; padding-bottom: 1rem; }
                  a { text-decoration: none; color: #0366d6; }
                  a:hover { text-decoration: underline; }
                  small { color: #586069; }
                </style>
              </head>
              <body>
                <h1>My Blog</h1>
                <ul>
            `;

            for (const issue of issues) {
              const title = issue.title;
              const body = issue.body;
              const htmlBody = converter.makeHtml(body);
              const createdAt = new Date(issue.created_at).toLocaleDateString('ja-JP');
              const fileName = `issue-${issue.number}.html`;

              indexHtml += `
                <li>
                  <h2><a href="${fileName}">${title}</a></h2>
                  <small>投稿日: ${createdAt}</small>
                </li>
              `;
              
              const articleHtml = `
                <!DOCTYPE html>
                <html lang="ja">
                <head>
                  <meta charset="UTF-8">
                  <meta name="viewport" content="width=device-width, initial-scale=1.0">
                  <title>${title}</title>
                  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/github-markdown-css/5.5.1/github-markdown.min.css">
                   <style>
                    body { box-sizing: border-box; min-width: 200px; max-width: 980px; margin: 0 auto; padding: 45px; }
                   </style>
                </head>
                <body class="markdown-body">
                  <h1>${title}</h1>
                  <p><small>投稿日: ${createdAt}</small> | <a href="${issue.html_url}" target="_blank">Issueでコメントする</a></p>
                  <hr>
                  ${htmlBody}
                  <hr>
                  <a href="index.html">ホームに戻る</a>
                </body>
                </html>
              `;
              await fs.writeFile(path.join(dir, fileName), articleHtml);
            }

            indexHtml += '</ul></body></html>';
            await fs.writeFile(path.join(dir, 'index.html'), indexHtml);

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
